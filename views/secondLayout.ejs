<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Management</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
    <style>   

        /* @import "https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700;800;900&display=swap"; */

        * {
            padding: 0;
            text-decoration: none;
            margin: 0;
            border: 0;
            outline: none;
            box-sizing: border-box;
            font-family: "Poppins", sans-serif !important;
            -webkit-font-smoothing: antialiased;
        }

        *::-webkit-scrollbar-track {
            width: 0rem;
        }

        *::-webkit-scrollbar {
            width: 0rem;
        }

        *::-webkit-scrollbar-thumb {
            background-color: transparent;
        }

        html, body {
            height: 100%;
        }

        body {
            background: radial-gradient(ellipse at bottom, #24222e 0%, #0c0d13 100%);
        }

        canvas {
            height: auto;
            max-width: 100%;
            vertical-align: middle;
        }

        .managament {
            position: absolute;
            width: 100%;
            height: 100%;
            display: block;
        }

        
        .resources {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 50%;
            height: 80%;
            background-color: #191721;
            border: 3px solid #272630;
            border-radius: 3px;
        }

        .resources h2 {
            position: absolute;
            top: 1.15rem;
            text-align: center;
            font-size: 18px;
            color: white;
            font-weight: 550;
            width: 100%;
        }

        .appendplace {
            position: absolute;
            top: 4rem;
            width: 100%;
            height: 42.6rem;
            overflow: auto;
        }

        .license {
            position: relative;
            left: 50%;
            transform: translate(-50%);
            width: 97%;
            height: 3rem;
            background-color: #25222e;
            margin-bottom: 0.5rem;
            border-radius: 3px;
        }

        .license>span {
            position: absolute;
            top: 50%;
            left: 1rem;
            width: 5rem;
            color: white;
            font-size: 15px;
            font-weight: 600;
            transform: translate(-0%, -50%);
        }

        
        .license>p {
            position: absolute;
            top: 50%;
            left: 8.2rem;
            width: max-content;
            color: rgb(201, 198, 198);
            font-size: 11px;
            font-weight: 550;
            transform: translate(-0%, -50%);
        }

        .license-btns {
            position: relative;
            top: 0;
            float: right;
            right: 0.5rem;
            width: 22rem;
            z-index: 999;
            height: 100%;
        }

        .license-btn {
            position: relative;
            float: right;
            top: 50%;
            right: 0;
            transform: translate(-0%, -50%);
            width: max-content;
            height: 65%;
            margin-left: 1rem;
            background-color: #427df7;
            border-radius: 3px;
            display: flex;
            justify-content: center;
            align-items: center;
            color: white;
            padding: 0 6px;
            font-size: 12px;
            font-weight: 550;
            cursor: pointer;
        }

        .license-btn:hover {
            background-color: #0b0b0c9d;
        }

        /* Modal container */
        .modal {
            display: none; /* Modal başlangıçta görünmez olsun */
            position: fixed; /* Diğer içeriklerin üzerinde sabitlenmiş olarak kalsın */
            z-index: 1; /* Diğer içeriklerin üzerinde yer alması için z-indeksini artırın */
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.6); /* Arkaplanı koyu bir renk ve hafif saydamlık yapın */
            overflow: auto; /* İçeriğin modal dışında görüntülenmesini sağlayın */
        }

        /* Modal içeriği */
        .modal-content {
            position: relative;
            background-color: #25222e;
            margin: 15% auto; /* Dikey ve yatay konumu ayarlayın */
            padding: 20px;
            height: 100px;
            border: 1px solid #88888852;
            width: 240px; /* Modalın genişliğini ayarlayın */
            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
        }

        #newIpInput {
            position: relative;
            top: -0.2rem;
            left: 2rem;
            background-color: #26222e;
            border-radius: 3px;
            border: 1px solid #88888852;
            color: white; 
            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
            width: 8rem;
            height: 1.5rem;
            text-align: center;
        }

        #newIpSubmit {
            position: relative;
            bottom: -1.2rem;
            left: 3rem;
            font-size: 11px;
            background-color: #427df7;
            border-radius: 3px;
            border: 1px solid #88888852;
            color: white; 
            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
            width: 6rem;
            height: 1.5rem;
            cursor: pointer;
        }

        /* Kapatma düğmesi */
        .close {
            position: relative;
            top: -1.4rem;
            right: -0.85rem;
            color: #fff;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        #newIpSubmit:hover {
            background-color: #111113d0;
        }
        
        .close:hover,
        .close:focus {
            color: #f74242;
            text-decoration: none;
            cursor: pointer;
        }

        .not-licenseyet {
            position: absolute;
            top: 50%;
            left: 50%;
            color: rgb(136, 136, 136);
            font-weight: 600;
            font-size: 150px;
            transform: translate(-50%, -50%);
        }

        /* User note */

        .modal2 {
            display: none; /* Modal başlangıçta görünmez olsun */
            position: fixed; /* Diğer içeriklerin üzerinde sabitlenmiş olarak kalsın */
            z-index: 1; /* Diğer içeriklerin üzerinde yer alması için z-indeksini artırın */
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.6); /* Arkaplanı koyu bir renk ve hafif saydamlık yapın */
            overflow: auto; /* İçeriğin modal dışında görüntülenmesini sağlayın */
        }

        /* Modal içeriği */
        .modal2-content {
            position: relative;
            background-color: #25222e;
            margin: 15% auto; /* Dikey ve yatay konumu ayarlayın */
            padding: 20px;
            height: 100px;
            border: 1px solid #88888852;
            width: 240px; /* Modalın genişliğini ayarlayın */
            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
        }

        #newNoteInput {
            position: relative;
            top: -0.2rem;
            left: 2rem;
            background-color: #26222e;
            border-radius: 3px;
            border: 1px solid #88888852;
            color: white; 
            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
            width: 8rem;
            height: 1.5rem;
            text-align: center;
        }

        #newNoteSubmit {
            position: relative;
            bottom: -1.2rem;
            left: 3rem;
            font-size: 11px;
            background-color: #427df7;
            border-radius: 3px;
            border: 1px solid #88888852;
            color: white; 
            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
            width: 6rem;
            height: 1.5rem;
            cursor: pointer;
        }

        #newNoteSubmit:hover {
            background-color: #111113d0;
        }

        /* Create license */

        .createlicense-btn {
            position: absolute;
            top: 0.95rem;
            left: 0.95rem;
            z-index: 999;
            width: 7rem;
            height: 2rem;
            background-color: #427df7;
            border: 2px solid #ffffff28;
            border-radius: 3px;
            font-size: 13px;
            font-weight: 500;
            color: white;
            border-radius: 3px;
            cursor: pointer;
        }

        .createlicense-btn:hover {
            background-color: #111113c7;
        }

        .modal3 {
            display: none; /* Modal başlangıçta görünmez olsun */
            position: fixed; /* Diğer içeriklerin üzerinde sabitlenmiş olarak kalsın */
            z-index: 1; /* Diğer içeriklerin üzerinde yer alması için z-indeksini artırın */
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.6); /* Arkaplanı koyu bir renk ve hafif saydamlık yapın */
            overflow: auto; /* İçeriğin modal dışında görüntülenmesini sağlayın */
        }

        /* Modal içeriği */
        .modal3-content {
            position: relative;
            background-color: #25222e;
            margin: 15% auto; /* Dikey ve yatay konumu ayarlayın */
            padding: 20px;
            height: 155px;
            border: 1px solid #88888852;
            width: 240px; /* Modalın genişliğini ayarlayın */
            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
        }

        #modalIp {
            position: relative;
            top: -0.2rem;
            left: 50%;
            transform: translate(-50%);
            background-color: #26222e;
            border-radius: 3px;
            border: 1px solid #88888852;
            color: white; 
            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
            width: 8rem;
            height: 1.5rem;
            text-align: center;
        }

        #modalNote {
            position: relative;
            top: 1.2rem;
            left: 50%;
            transform: translate(-50%);
            background-color: #26222e;
            border-radius: 3px;
            border: 1px solid #88888852;
            color: white; 
            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
            width: 11rem;
            height: 1.5rem;
            text-align: center;
        }

        #modalSubmit {
            position: relative;
            bottom: -2.6rem;
            left: 3rem;
            font-size: 11px;
            background-color: #427df7;
            border-radius: 3px;
            border: 1px solid #88888852;
            color: white; 
            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
            width: 6rem;
            height: 1.5rem;
            cursor: pointer;
        }

        #modalSubmit:hover {
            background-color: #427ef79d;
        }

        @media only screen and (max-width: 793px) {
            .resources {
                width: 90%;
            }

            .license {
                height: 6rem;
            }

            .license-btn {
                position: relative;
                float: left;
                left: 1.75rem;
                top: 4.5rem;
                height: 2rem;
            }

            .license>span {
                position: absolute;
                top: 17%;
                left: 0.6rem;
                width: 5rem;
                color: white;
                font-size: 15px;
                font-weight: 600;
            }

            
            .license>p {
                position: absolute;
                top: 2.3rem;
                left: 0.6rem;
                width: max-content;
                color: rgb(201, 198, 198);
                font-size: 13px;
                font-weight: 550;
                transform: translate(-0%, -50%);
            }

            .licensed-ips {
                position: relative;
                top: 2rem;
                right: -6rem;
            }
         }

         .lockauth {
            position: absolute;
            bottom: 0.5rem;
            left: 50%;
            transform: translate(-50%); 
            color: white;
         }

         lockauthh {
            position: absolute;
            bottom: 1.4rem;
            left: 50%;
            transform: translate(-50%);
            text-align: center;
            width: max-content;
            font-size: 23px;
            color: white;
            font-weight: 550;
            background-image: linear-gradient(135deg, rgb(47, 128, 237) 0%, rgb(178, 255, 218) 100%); 
            background-clip: text; 
            -webkit-text-fill-color: transparent; 
            background-repeat: no-repeat;
        }

        a {
            color: rgb(47, 128, 237);
            font-weight: 550;
            font-size: 15px;
        }

    </style>
</head>
<body>

    <div class="manasgament">
        <div class="lockauth"><lockauthh>LockAuth</lockauthh>© 2024 <a href="https://discord.com/users/1037346625057730560" target="_blank">Ayaz</a> & <a href="https://discord.com/users/1037343835589713941" target="_blank">Wotex</a></div>
        <div class="resources">
            <h2 class="licensed-ips">Licenses</h2>
            <button class="createlicense-btn">Create license</button>
            <div class="appendplace">
                
                <% if (data.length === 0) { %>
                    <p class="not-licenseyet"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 24 24" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M6 2v6h.01L6 8.01 10 12l-4 4 .01.01H6V22h12v-5.99h-.01L18 16l-4-4 4-3.99-.01-.01H18V2H6zm10 14.5V20H8v-3.5l4-4 4 4zm-4-5-4-4V4h8v3.5l-4 4z"></path></svg></p>
                <% } else { %>
                    <% data.forEach(function(item) { %>
                        <div class="license" data-ip="<%= item.ip %>">
                            <span class="ip"><%= item.ip %></span>
                            <p class="note"><%= item.user_note %> asdas sad</p>
                            <div class="license-btns">
                                <div class="license-btn change-ip" data-ip="<%= item.ip %>">Change Ip</div>
                                <div class="license-btn change-note" data-ip="<%= item.ip %>" data-note="<%= item.user_note %>">Set User Note</div>
                                <div style="background-color: #f74242;" class="license-btn remove-license" data-ip="<%= item.ip %>">Remove License</div>
                            </div>
                        </div>
                    <% }); %>  
                <% } %>
            </div>
        </div>
        <div id="myModal" class="modal">
            <div class="modal-content">
                <span class="close">&times;</span>
                <form id="changeIpForm">
                    <input type="text" id="newIpInput" name="newIp" placeholder="Type new ip">
                    <button type="submit" id="newIpSubmit">Submit</button>
                </form>
            </div>
        </div>


        <div id="myModal2" class="modal2">
            <div class="modal2-content">
                <span class="close">&times;</span>
                <form id="changeNoteForm">
                    <input type="text" id="newNoteInput" name="newIp" placeholder="Type new user note">
                    <button type="submit" id="newNoteSubmit">Submit</button>
                </form>
            </div>
        </div>

        <div id="myModal3" class="modal3">
            <div class="modal3-content">
                <span class="close">&times;</span>
                <input type="text" id="modalIp" name="ip" placeholder="Type new ip">
                <input type="text" id="modalNote" name="ip" placeholder="Type new user note">
                <button id="modalSubmit">Submit</button>
            </div>
        </div>
    </div>

    <script>
          $(document).ready(function() {

            // Create

            $(document).on('click', '.createlicense-btn', function (event) {
                $('#myModal3').css('display', 'block');
            });

            $(document).on('click', '#modalSubmit', function (event) {
                var ip = $('#modalIp').val();
                var note = $('#modalNote').val();

                if (ip.length < 5) {
                    return alert('En az 5 hanelik ip yazman gerekiyor')
                }
                if (note.length < 3) {
                    return alert('En az 3 harf yazman lazım nota')
                }
                $.ajax({
                    type: 'POST',
                    url: '/createLicense',
                    data: { ip: ip, note: note },
                    success: function(response) {
                        $('.modal3').hide()
                        $('.not-licenseyet').remove();
                        $('.appendplace').append(` 
                            <div class="license" data-ip="${ip}">
                                <span class="ip">${ip}</span>
                                <p class="note">${note}</p>
                                <div class="license-btns">
                                    <div class="license-btn change-ip" data-ip="${ip}">Change Ip</div>
                                    <div class="license-btn change-note" data-ip="${ip}" data-note="${note}">Set User Note</div>
                                    <div style="background-color: #f74242;" class="license-btn remove-license" data-ip="${ip}">Remove License</div>
                                </div>
                            </div>
                        `)
                        setTimeout(() => {
                            alert(response.message)
                        }, 150);
                    },
                    error: function(xhr, status, error) {
                        console.log('Hata:', error);
                        console.error('Hata:', error);
                    }
                });
            });


            // Change ip

            let ipToChange = null; 
            let noteToChange = null;
            $(document).on('click', '.change-ip', function (event) {
                var ip = $(this).data('ip');
                $('#myModal').css('display', 'block');
                ipToChange = ip;
                $('#newIpInput').val(ip)
            });

            $(document).on('click', '.close', function (event) {
                $('#myModal').css('display', 'none');
                $('#myModal2').css('display', 'none');
                $('#myModal3').css('display', 'none');
            });

            $(document).on('click', '#newIpSubmit', function (event) {
                event.preventDefault(); // Formun varsayılan davranışını engelle
                var newIp = $('#newIpInput').val();
                $.ajax({
                    type: 'POST',
                    url: '/changeIp',
                    data: { ipToChange: ipToChange, newIp: newIp },
                    success: function(response) {
                        $('#myModal').css('display', 'none');
                        $('.ip').filter(function() {
                            return $(this).text() === ipToChange;
                        }).text(newIp);
                        setTimeout(() => {
                            alert(response.message)
                        }, 150);
                    },
                    error: function(xhr, status, error) {
                        console.log('Hata:', error);
                        console.error('Hata:', error);
                    }
                });
            });

           
            // Change user note 

            $(document).on('click', '.change-note', function (event) {
                var ip = $(this).data('ip');
                var note = $(this).data('note');
                $('#myModal2').css('display', 'block');
                ipToChange = ip;
                noteToChange = note;
                $('#newNoteInput').val(noteToChange)
            });

            $(document).on('click', '.newNoteSubmit', function (event) {
                event.preventDefault(); // Formun varsayılan davranışını engelle
                var newNote = $('#newNoteInput').val();
                $.ajax({
                    type: 'POST',
                    url: '/changeNote',
                    data: { ip: ipToChange, newNote: newNote },
                    success: function(response) {
                        $('#myModal2').css('display', 'none');
                        $('.note').filter(function() {
                            return $(this).text() === noteToChange;
                        }).text(newNote);
                        setTimeout(() => {
                            alert(response.message)
                        }, 150);
                    },
                    error: function(xhr, status, error) {
                        console.log('Hata:', error);
                        console.error('Hata:', error);
                    }
                });
            });
        });

        // remove license 

        $(document).on('click', '.remove-license', function (event) {
            var ip = $(this).data('ip');
            event.preventDefault(); 
            $.ajax({
                type: 'POST',
                url: '/removeLicense',
                data: { ip: ip },
                success: function(response) {
                    $(`.license[data-ip="${ip}"]`).remove()
                    setTimeout(() => {
                        alert(response.message)
                    }, 150);
                    if (response.lengthy == 0) {
                        $('.not-licenseyet').remove()
                        $('.appendplace').append(`
                            <p class="not-licenseyet"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 24 24" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M6 2v6h.01L6 8.01 10 12l-4 4 .01.01H6V22h12v-5.99h-.01L18 16l-4-4 4-3.99-.01-.01H18V2H6zm10 14.5V20H8v-3.5l4-4 4 4zm-4-5-4-4V4h8v3.5l-4 4z"></path></svg></p>
                        `)
                    }
                },
                error: function(xhr, status, error) {
                    console.log('Hata:', error);
                    console.error('Hata:', error);
                }
            });
        })

        class Smoke {
        constructor(options) {
            const defaults = {
            width: window.innerWidth,
            height: window.innerHeight
            };

            Object.assign(this, options, defaults);
            this.onResize = this.onResize.bind(this);

            this.addEventListeners();
            this.init();
        }

        init() {
            const { width, height } = this;

            this.clock = new THREE.Clock();

            const renderer = this.renderer = new THREE.WebGLRenderer();

            renderer.setSize(width, height);

            this.scene = new THREE.Scene();

            const meshGeometry = new THREE.BoxGeometry(200, 200, 200); // CubeGeometry yerine BoxGeometry kullanıldı
            const meshMaterial = new THREE.MeshBasicMaterial({ // MeshLambertMaterial yerine MeshBasicMaterial veya MeshStandardMaterial kullanılabilir
            color: 0xaa6666,
            wireframe: false
            });
            this.mesh = new THREE.Mesh(meshGeometry, meshMaterial);

            this.cubeSineDriver = 0;

            this.addCamera();
            this.addLights();
            this.addParticles();
            this.addBackground();

            document.body.appendChild(renderer.domElement);
        }

        evolveSmoke(delta) {
            const { smokeParticles } = this;

            let smokeParticlesLength = smokeParticles.length;

            while (smokeParticlesLength--) {
            smokeParticles[smokeParticlesLength].rotation.z += delta * 0.2;
            }
        }

        addLights() {
            const { scene } = this;
            const light = new THREE.DirectionalLight(0xffffff, 0.75);

            light.position.set(-1, 0, 1);
            scene.add(light);
        }

        addCamera() {
            const { scene } = this;
            const camera = this.camera = new THREE.PerspectiveCamera(75, this.width / this.height, 1, 10000);

            camera.position.z = 1000;
            scene.add(camera);
        }

        addParticles() {
            const { scene } = this;
            const textureLoader = new THREE.TextureLoader();
            const smokeParticles = this.smokeParticles = [];

            textureLoader.load('https://rawgit.com/marcobiedermann/playground/master/three.js/smoke-particles/dist/assets/images/clouds.png', function (texture) {
            const smokeMaterial = new THREE.MeshBasicMaterial({ // MeshLambertMaterial yerine MeshBasicMaterial veya MeshStandardMaterial kullanılabilir
                color: 0xffffff,
                map: texture,
                transparent: true,
                opacity: 0.1
            });
            smokeMaterial.map.minFilter = THREE.LinearFilter;
            const smokeGeometry = new THREE.PlaneBufferGeometry(300, 300);

            const smokeMeshes = [];
            let limit = 150;

            while (limit--) {
                smokeMeshes[limit] = new THREE.Mesh(smokeGeometry, smokeMaterial);
                smokeMeshes[limit].position.set(Math.random() * 500 - 250, Math.random() * 500 - 250, Math.random() * 1000 - 100);
                smokeMeshes[limit].rotation.z = Math.random() * 360;
                smokeParticles.push(smokeMeshes[limit]);
                scene.add(smokeMeshes[limit]);
            }
            });
        }

        addBackground() {
            const { scene } = this;
            const textureLoader = new THREE.TextureLoader();
            const textGeometry = new THREE.PlaneBufferGeometry(600, 320);

            textureLoader.load('https://cdn.discordapp.com/attachments/1037346625057730560/1226643639472623667/image.png?ex=662583e9&is=66130ee9&hm=e457f85ecdeaa16302ef02fab95b289310c39f4ade9f9202eebedd51db0cec3f&', function (texture) {
            const textMaterial = new THREE.MeshBasicMaterial({ // MeshLambertMaterial yerine MeshBasicMaterial veya MeshStandardMaterial kullanılabilir
                blending: THREE.AdditiveBlending,
                color: 0xffffff,
                map: texture,
                opacity: 1,
                transparent: true
            });
            textMaterial.map.minFilter = THREE.LinearFilter;
            const text = new THREE.Mesh(textGeometry, textMaterial);

            text.position.z = 900;
            scene.add(text);
            });
        }

        render() {
            const { mesh } = this;
            let { cubeSineDriver } = this;

            cubeSineDriver += 0.01;

            mesh.rotation.x += 0.005;
            mesh.rotation.y += 0.01;
            mesh.position.z = 100 + Math.sin(cubeSineDriver) * 500;

            this.renderer.render(this.scene, this.camera);
        }

        update() {
            this.evolveSmoke(this.clock.getDelta());
            this.render();

            requestAnimationFrame(this.update.bind(this));
        }

        onResize() {
            const { camera } = this;

            const windowWidth = window.innerWidth;
            const windowHeight = window.innerHeight;

            camera.aspect = windowWidth / windowHeight;
            camera.updateProjectionMatrix();

            this.renderer.setSize(windowWidth, windowHeight);
        }

        addEventListeners() {
            window.addEventListener('resize', this.onResize);
        }
        }
        const smoke = new Smoke();
        smoke.update();
    </script> 
</body>
</html>